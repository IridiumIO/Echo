<UserControl x:Class="Echo.Views.ProcessView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Echo.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:viewmodels="clr-namespace:Echo.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:ProcessViewModel}"
             d:DesignHeight="450" d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid Margin="30,10,30,20">

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Height="30"
                    Margin="5,20,0,10"
                    Orientation="Horizontal">
            <TextBlock Text="{Binding ProcessTrigger.DisplayName}"
                       MinWidth="100"
                       FontSize="22" FontWeight="SemiBold" MouseDown="TextBlock_MouseDown"
                       TextTrimming="CharacterEllipsis"
                       Visibility="{Binding IsEditingName, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=False}" />
            <TextBox Text="{Binding ProcessTrigger.DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     MinWidth="100" MaxWidth="600"
                     Margin="-3,-1,-3,-3" Padding="0"
                     FontSize="22" FontWeight="SemiBold" KeyDown="TextBox_KeyDown"
                     LostFocus="TextBox_LostFocus"
                     Visibility="{Binding IsEditingName, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
            <ui:Button Margin="10,3,0,0"
                       Background="Transparent" BorderThickness="0" Click="Button_Click" IsTabStop="False">
                <ui:SymbolIcon Symbol="Edit20" />
            </ui:Button>

        </StackPanel>

        <ui:Button Content="Delete"
                   Grid.Column="1"
                   Margin="0,15,0,0"
                   Command="{Binding DeleteProcessCommand}"
                   Foreground="{StaticResource PaletteRedBrush}"
                   IsTabStop="False">
            <ui:Button.Icon>
                <ui:SymbolIcon Symbol="Delete24" />
            </ui:Button.Icon>
        </ui:Button>

        <ui:ListView Grid.Row="1" Grid.ColumnSpan="2"
                     Margin="0,0,0,0" 
                     ItemsSource="{Binding ProcessTrigger.TargetProcessPaths}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="0,0,0,0" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          d:Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>

                </Style>

            </ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>

                        <TextBlock Text="{Binding Converter={StaticResource TokenisedFolderPathConverter}}"
                                   Foreground="#40FFFFFF" TextTrimming="CharacterEllipsis" />
                        <!--  Delete Button  -->
                        <ui:Button Grid.Column="4"
                                   Width="26" Height="26"
                                   Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                   BorderBrush="{StaticResource PaletteRedBrush}"
                                   Command="{Binding DataContext.RemoveProcessPathCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                   CommandParameter="{Binding}">
                            <ui:SymbolIcon FontSize="12"
                                           Foreground="{StaticResource PaletteRedBrush}"
                                           Symbol="Dismiss12" />
                            <ui:Button.Style>
                                <Style BasedOn="{StaticResource {x:Type ui:Button}}" TargetType="ui:Button">
                                    <Setter Property="Opacity" Value="0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:Button.Style>
                        </ui:Button>
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>

            <ui:ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add Monitored Process" Command="{Binding AddProcessPathCommand}"/>
                </ContextMenu>
            </ui:ListView.ContextMenu>
            
        </ui:ListView>


        <!--<TextBlock Text="{Binding ProcessTrigger.TargetProcessPath, Converter={StaticResource TokenisedFolderPathConverter}}"
                   Grid.Row="1" Grid.ColumnSpan="2"
                   Margin="0,0,0,20"
                   Foreground="#40FFFFFF" TextTrimming="CharacterEllipsis" />-->

        <Separator Grid.Row="2" Grid.ColumnSpan="2"
                   Height="1"
                   VerticalAlignment="Bottom" />

        <Grid Grid.Row="3" Grid.ColumnSpan="2"
              Margin="20,20,0,0"
              IsSharedSizeScope="True" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" SharedSizeGroup="Col1" />
                <ColumnDefinition Width="120" SharedSizeGroup="Col2" />
                <ColumnDefinition Width="120" SharedSizeGroup="Col2" />
                <ColumnDefinition Width="120" SharedSizeGroup="Col2" />
                <ColumnDefinition Width="120" SharedSizeGroup="Col2" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Triggered Program"
                       Margin="0,0,0,0" HorizontalAlignment="Left"
                       FontSize="13" FontWeight="SemiBold" />
            <TextBlock Text="Enabled"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       FontSize="13" FontWeight="SemiBold"/>
            <TextBlock Text="Start Minimised"
                       Grid.Column="2"
                       HorizontalAlignment="Center"
                       FontSize="13" FontWeight="SemiBold" >
                 <Run Text=" (?)" FontWeight="Normal" Foreground="#80FFFFFF" >
                     <Run.ToolTip>
                         <ToolTip Margin="20" Padding="20"
                                  Background="#38404e" ClipToBounds="False">
                             <ToolTip.Effect>
                                 <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                             </ToolTip.Effect>
                             <TextBlock Text="Launches the program minimised" FontWeight="Normal"/>

                             </ToolTip>
                     </Run.ToolTip>
                 </Run>     
            </TextBlock>
            <TextBlock Text="Allow Multiple"
                       Grid.Column="3"
                       HorizontalAlignment="Center"
                       FontSize="13" FontWeight="SemiBold"  >
                 <Run Text=" (?)" FontWeight="Normal" Foreground="#80FFFFFF" >
                     <Run.ToolTip>
                         <ToolTip Margin="20" Padding="20" MaxWidth="800"
                                  Background="#38404e" ClipToBounds="False">
                             <ToolTip.Effect>
                                 <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                             </ToolTip.Effect>
                             <TextBlock Text="Allows multiple instances of this process to be run if you launch the parent program multiple times. Otherwise, only a single instance of this process will be allowed to run." FontWeight="Normal" TextWrapping="Wrap"/>

                             </ToolTip>
                     </Run.ToolTip>
                 </Run>     
            </TextBlock>
            <TextBlock Text="Kill on Close"
                       Grid.Column="4"
                       HorizontalAlignment="Center"
                       FontSize="13" FontWeight="SemiBold"  >
                 <Run Text=" (?)" FontWeight="Normal" Foreground="#80FFFFFF" >
                     <Run.ToolTip>
                         <ToolTip Margin="20" Padding="20" MaxWidth="800"
                                  Background="#38404e" ClipToBounds="False">
                             <ToolTip.Effect>
                                 <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                             </ToolTip.Effect>
                             <TextBlock  FontWeight="Normal" TextWrapping="Wrap" >
                                 <Run Text="Tries to kill the process when you close the parent program. "/>
                                 <LineBreak/>
                                 <Run Text="This may not work in some cases, e.g. if the process is a wrapper that calls other programs."/>
                             </TextBlock>

                             </ToolTip>
                     </Run.ToolTip>
                 </Run>     
            </TextBlock>
        </Grid>
        <ui:ListView Grid.Row="3" Grid.ColumnSpan="2"
                     Margin="0,50,0,0"
                     IsTabStop="False"
                     ItemsSource="{Binding ProcessTrigger.RipplePrograms}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
           
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="15,0"
                          Background="Transparent" ShowGridLines="False">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="120" />
                        </Grid.ColumnDefinitions>

                       
                        <Border x:Name="ContainingGrid"
                                Grid.Column="0" Grid.ColumnSpan="2"
                                Margin="10,0,-10,0"
                                CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush Opacity="0" StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Offset="0.4" Color="#FFFFFFFF" />
                                    <GradientStop Offset="1" Color="#FFFFFFFF" />
                                </LinearGradientBrush>
                            </Border.Background>

                        </Border>

                        <StackPanel Orientation="Horizontal">
                            <ui:FontIcon FontSize="16"  Glyph="{Binding RippleProcessPath, Converter={StaticResource ProcessPathToSymbolConverter}}" FontFamily="Segoe Fluent Icons"  Grid.Column="0" HorizontalAlignment="Left" />

                            <TextBlock Text="{Binding RippleProcessName}" Margin="20 0 0 0"
                                   HorizontalAlignment="Left" VerticalAlignment="Center">
                            <TextBlock.ToolTip>
                                <ToolTip Margin="20" Padding="20" MaxWidth="800"
                                          ClipToBounds="False">
                                    <ToolTip.Effect>
                                        <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                                    </ToolTip.Effect>
                                    <TextBlock Text="{Binding RippleProcessPath, Converter={StaticResource TokenisedFolderPathConverter}}" />
                                </ToolTip>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        </StackPanel>

                       


                        <CheckBox Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding ProcessTriggerOptions.Enabled}" />
                        <CheckBox Grid.Column="2"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding ProcessTriggerOptions.LaunchHidden}" />
                        <CheckBox Grid.Column="3"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding ProcessTriggerOptions.AllowMultiple}" />
                        <CheckBox Grid.Column="4"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding ProcessTriggerOptions.TerminateHelpersOnTargetExit}" />

                        <!--  Delete Button  -->
                        <ui:Button Grid.Column="4" Grid.RowSpan="2"
                                   Width="26" Height="26"
                                   Margin="0,0,-20,0" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                   BorderBrush="{StaticResource PaletteRedBrush}"
                                   Command="{Binding DataContext.RemoveRippleCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                   CommandParameter="{Binding}">
                            <ui:SymbolIcon FontSize="12"
                                           Foreground="{StaticResource PaletteRedBrush}"
                                           Symbol="Dismiss12" />
                            <ui:Button.Style>
                                <Style BasedOn="{StaticResource {x:Type ui:Button}}" TargetType="ui:Button">
                                    <Setter Property="Opacity" Value="0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:Button.Style>
                        </ui:Button>

                        <!-- Second row: hidden by default, visible on hover -->
                        <StackPanel Grid.Row="1" Grid.ColumnSpan="5" Orientation="Horizontal">
                            <!-- Example controls, replace with your own -->
                            <TextBlock Text="Launch Arguments: " Margin="35 0 0 0" VerticalAlignment="Center" FontWeight="SemiBold" FontSize="13" Foreground="#40FFFFFF"/>
                            <ui:TextBox Width="385" HorizontalAlignment="Stretch" Text="{Binding ProcessTriggerOptions.Arguments, UpdateSourceTrigger=PropertyChanged}" Foreground="LightGray" Margin="100,2,0,2"/>
                            

                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </Grid>

                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>

        <ui:Button Content="Add "
                   Grid.Row="4"
                   Width="90"
                   Margin="20,10"
                   Command="{Binding AddRippleCommand}">
            <ui:Button.Icon>
                <ui:SymbolIcon Symbol="Add12" />
            </ui:Button.Icon>
        </ui:Button>

    </Grid>
</UserControl>
